{
  message: 'Server running at port 4001',
  level: 'info',
  timestamp: '2023-08-09T08:33:45.306Z'
}
{
  message: 'channel created successfully',
  level: 'info',
  timestamp: '2023-08-09T08:33:45.347Z'
}
{
  message: 'Server running at port 4001',
  level: 'info',
  timestamp: '2023-08-09T08:35:01.662Z'
}
{
  message: 'channel created successfully',
  level: 'info',
  timestamp: '2023-08-09T08:35:01.707Z'
}
{
  message: 'Channel closed',
  stack: 'IllegalOperationError: Channel closed\n' +
    '    at Channel.<anonymous> (/Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/node_modules/amqplib/lib/channel.js:160:11)\n' +
    '    at Channel.C.publish (/Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/node_modules/amqplib/lib/channel_model.js:158:15)\n' +
    '    at Channel.C.sendToQueue (/Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/node_modules/amqplib/lib/channel_model.js:162:15)\n' +
    '    at /Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/index.js:45:21\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at sendData (/Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/index.js:42:12)\n' +
    '    at /Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/index.js:74:22\n' +
    '    at Layer.handle [as handle_request] (/Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/node_modules/express/lib/router/route.js:144:13)\n' +
    '    at Route.dispatch (/Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/node_modules/express/lib/router/route.js:114:3)\n' +
    '    at Layer.handle [as handle_request] (/Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at /Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/node_modules/express/lib/router/index.js:284:15\n' +
    '    at Function.process_params (/Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/node_modules/express/lib/router/index.js:346:12)\n' +
    '    at next (/Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/node_modules/express/lib/router/index.js:280:10)\n' +
    '    at /Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/node_modules/body-parser/lib/read.js:137:5',
  stackAtStateChange: `Stack capture: Connection closed: 320 (CONNECTION-FORCED) with message "CONNECTION_FORCED - broker forced connection closure with reason 'shutdown'"\n` +
    '    at Object.accept (/Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/node_modules/amqplib/lib/connection.js:90:15)\n' +
    '    at Connection.mainAccept [as accept] (/Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/node_modules/amqplib/lib/connection.js:64:33)\n' +
    '    at Socket.go (/Users/muhammadrasulrustam/Documents/Backend/js/medium-rabbitmq-nodejs-main/service-one/node_modules/amqplib/lib/connection.js:478:48)\n' +
    '    at Socket.emit (node:events:513:28)\n' +
    '    at emitReadable_ (node:internal/streams/readable:578:12)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:82:21)',
  level: 'error',
  timestamp: '2023-08-09T08:39:24.483Z'
}
{
  message: 'Server running at port 4001',
  level: 'info',
  timestamp: '2023-08-09T08:39:40.852Z'
}
{
  message: 'Server running at port 4001',
  level: 'info',
  timestamp: '2023-08-09T08:40:13.928Z'
}
{
  message: 'Server running at port 4001',
  level: 'info',
  timestamp: '2023-08-09T08:40:23.625Z'
}
{
  message: 'Server running at port 4001',
  level: 'info',
  timestamp: '2023-08-09T08:47:48.302Z'
}
{
  message: 'Server running at port 4001',
  level: 'info',
  timestamp: '2023-08-09T08:48:59.630Z'
}
{
  message: 'Server running at port 4001',
  level: 'info',
  timestamp: '2023-08-09T08:56:08.542Z'
}
{
  message: 'channel created successfully',
  level: 'info',
  timestamp: '2023-08-09T08:56:08.595Z'
}
{
  message: 'Server running at port 4001',
  level: 'info',
  timestamp: '2023-08-09T08:59:53.551Z'
}
{
  message: 'channel created successfully',
  level: 'info',
  timestamp: '2023-08-09T08:59:53.591Z'
}
{
  message: 'Server running at port 4001',
  level: 'info',
  timestamp: '2023-08-09T09:16:53.823Z'
}
{
  message: 'channel created successfully',
  level: 'info',
  timestamp: '2023-08-09T09:16:53.861Z'
}
{
  message: 'message sent successfully',
  level: 'info',
  timestamp: '2023-08-09T09:17:25.112Z'
}
{
  message: 'response received',
  level: 'info',
  timestamp: '2023-08-09T09:17:25.130Z'
}
{
  message: 'A message is sent to queue',
  level: 'info',
  timestamp: '2023-08-09T09:17:25.130Z'
}
{
  meta: {
    req: {
      url: '/multiply',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.30.0',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'f02263cd-1548-457d-98e4-109b809fa0e2',
        host: 'localhost:4001',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '17'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/multiply',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 38
  },
  level: 'info',
  message: 'HTTP POST /multiply',
  timestamp: '2023-08-09T09:17:25.138Z'
}
{
  message: 'Server running at port 4001',
  level: 'info',
  timestamp: '2023-08-09T09:18:18.027Z'
}
{
  message: 'channel created successfully',
  level: 'info',
  timestamp: '2023-08-09T09:18:18.059Z'
}
{
  message: 'message sent successfully',
  level: 'info',
  timestamp: '2023-08-09T09:18:24.201Z'
}
{
  message: 'response received',
  level: 'info',
  timestamp: '2023-08-09T09:18:24.213Z'
}
{
  message: 'A message is sent to queue',
  level: 'info',
  timestamp: '2023-08-09T09:18:24.213Z'
}
{
  meta: {
    req: {
      url: '/multiply',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.30.0',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '1c96e3ad-30c8-41b2-840a-2fe723fd58fc',
        host: 'localhost:4001',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '17'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/multiply',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 29
  },
  level: 'info',
  message: 'HTTP POST /multiply',
  timestamp: '2023-08-09T09:18:24.221Z'
}
